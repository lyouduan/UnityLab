// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel UpdateParticle 

struct ParticleData
{
    float3 pos;
    float4 color;
};

RWStructuredBuffer<ParticleData> ParticleBuffer;

float time;


[numthreads(10, 10, 10)]
void UpdateParticle(uint3 gid : SV_GroupID, uint index: SV_GroupIndex)
{
    int pid = gid.x * 1000 + index;
    
    float x = sin(index);
    float y = sin(index * 1.2f);
    float3 forward = float3(x, y, -sqrt(1 - x * x - y * y));
    ParticleBuffer[pid].color = float4(forward.x, forward.y, cos(index) * 0.5f + 0.5, 1);
    
    if(time > gid.x)
    {
        ParticleBuffer[pid].pos += forward * 0.0001f;
    }

}
